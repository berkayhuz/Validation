<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccessToken_Invalid" xml:space="preserve">
  <value>El formato del token de acceso no es válido.</value>
</data>
<data name="Base64_Invalid" xml:space="preserve">
  <value>La cadena proporcionada no es un valor codificado en Base64 válido.</value>
</data>
<data name="ConstantValue" xml:space="preserve">
  <value>Este campo debe ser igual a '{0}'.</value>
</data>
<data name="CreditCard_Invalid" xml:space="preserve">
  <value>El número de tarjeta de crédito no es válido.</value>
</data>
<data name="Currency_Invalid" xml:space="preserve">
  <value>El código de moneda no es válido o no es compatible.</value>
</data>
<data name="DateRange_StartAfterEnd" xml:space="preserve">
  <value>La fecha de inicio debe ser anterior o igual a la fecha de fin.</value>
</data>
<data name="Date_BusinessDay" xml:space="preserve">
  <value>La fecha debe ser un día laborable (de lunes a viernes).</value>
</data>
<data name="Date_Future" xml:space="preserve">
  <value>La fecha debe estar en el futuro.</value>
</data>
<data name="Date_InFuture" xml:space="preserve">
  <value>La fecha no puede estar en el futuro.</value>
</data>
<data name="Date_InPast" xml:space="preserve">
  <value>La fecha no puede estar en el pasado.</value>
</data>
<data name="Date_LeapYear" xml:space="preserve">
  <value>La fecha debe pertenecer a un año bisiesto.</value>
</data>
<data name="Date_Only" xml:space="preserve">
  <value>Debe ser una fecha sin hora.</value>
</data>
<data name="Date_Past" xml:space="preserve">
  <value>La fecha debe estar en el pasado.</value>
</data>
<data name="Date_Utc" xml:space="preserve">
  <value>La fecha debe estar marcada como UTC.</value>
</data>
<data name="Date_Weekday" xml:space="preserve">
  <value>La fecha debe ser un día laborable (de lunes a viernes).</value>
</data>
<data name="Date_Weekend" xml:space="preserve">
  <value>La fecha debe ser un fin de semana (sábado o domingo).</value>
</data>
<data name="Decimal_PrecisionExceeded" xml:space="preserve">
  <value>El número excede la precisión o escala permitida.</value>
</data>
<data name="Dev_AlwaysInvalid" xml:space="preserve">
  <value>Siempre inválido para fines de prueba.</value>
</data>
<data name="Dev_AlwaysValid" xml:space="preserve">
  <value>Siempre válido.</value>
</data>
<data name="Email_Invalid" xml:space="preserve">
  <value>Dirección de correo electrónico no válida.</value>
</data>
<data name="Enum_Invalid" xml:space="preserve">
  <value>El valor seleccionado no es una opción válida.</value>
</data>
<data name="File_Invalid" xml:space="preserve">
  <value>Archivo no válido: tamaño o formato no permitido.</value>
</data>
<data name="Guid_Empty" xml:space="preserve">
  <value>{PropertyName} no puede estar vacío.</value>
</data>
<data name="Hex_Invalid" xml:space="preserve">
  <value>El valor no es una cadena hexadecimal válida.</value>
</data>
<data name="IBAN_Invalid" xml:space="preserve">
  <value>El número IBAN no es válido.</value>
</data>
<data name="IpAddress_Invalid" xml:space="preserve">
  <value>El formato de la dirección IP no es válido.</value>
</data>
<data name="Json_Invalid" xml:space="preserve">
  <value>El valor no es una cadena JSON válida.</value>
</data>
<data name="Localization_InvalidCulture" xml:space="preserve">
  <value>Debe ser un código de cultura válido (por ejemplo, en-US).</value>
</data>
<data name="Localization_InvalidLanguageTag" xml:space="preserve">
  <value>Debe ser una etiqueta de idioma válida (por ejemplo, en-US, tr, fr-FR).</value>
</data>
<data name="Localization_InvalidTimeZone" xml:space="preserve">
  <value>Debe ser un identificador de zona horaria válido.</value>
</data>
<data name="Logic_CompareWithOther" xml:space="preserve">
  <value>Este campo debe cumplir una regla de comparación con otra propiedad.</value>
</data>
<data name="Logic_ConditionalRequired" xml:space="preserve">
  <value>Este campo es obligatorio cuando {0} está relleno.</value>
</data>
<data name="Logic_ConditionalRequiredWithValue" xml:space="preserve">
  <value>Este campo es obligatorio cuando {0} es '{1}'.</value>
</data>
<data name="Logic_DisallowedIf" xml:space="preserve">
  <value>Este campo debe estar vacío en determinadas condiciones.</value>
</data>
<data name="Logic_EqualToOtherProperty" xml:space="preserve">
  <value>Este campo debe ser igual a {0}.</value>
</data>
<data name="Logic_MutuallyExclusiveProperties" xml:space="preserve">
  <value>Solo uno de los siguientes campos debe estar establecido: {0}.</value>
</data>
<data name="Logic_NotEqualToOtherProperty" xml:space="preserve">
  <value>Este campo no debe ser igual a {0}.</value>
</data>
<data name="Logic_RequiredIf" xml:space="preserve">
  <value>Este campo es obligatorio bajo ciertas condiciones.</value>
</data>
<data name="MustBeNull" xml:space="preserve">
  <value>Este campo debe ser nulo.</value>
</data>
<data name="MustNotBeNull" xml:space="preserve">
  <value>Este campo no debe ser nulo.</value>
</data>
<data name="NationalId_Invalid" xml:space="preserve">
  <value>El número de identificación nacional no es válido.</value>
</data>
<data name="Network_DomainName" xml:space="preserve">
  <value>Debe ser un nombre de dominio válido.</value>
</data>
<data name="Network_HostnameWithPort" xml:space="preserve">
  <value>Debe ser un nombre de host válido con puerto.</value>
</data>
<data name="Network_IPv6Address" xml:space="preserve">
  <value>Debe ser una dirección IPv6 válida.</value>
</data>
<data name="Number_DivisibleBy" xml:space="preserve">
  <value>El valor debe ser divisible por {0}.</value>
</data>
<data name="Number_Even" xml:space="preserve">
  <value>El número debe ser par.</value>
</data>
<data name="Number_MaxDigits" xml:space="preserve">
  <value>El número debe tener como máximo {0} dígitos.</value>
</data>
<data name="Number_MinDigits" xml:space="preserve">
  <value>El número debe tener al menos {0} dígitos.</value>
</data>
<data name="Number_MultipleOf" xml:space="preserve">
  <value>El número debe ser múltiplo de {0}.</value>
</data>
<data name="Number_NotZero" xml:space="preserve">
  <value>El valor no debe ser cero.</value>
</data>
<data name="Number_Odd" xml:space="preserve">
  <value>El número debe ser impar.</value>
</data>
<data name="Number_PercentageRange" xml:space="preserve">
  <value>El valor debe ser un porcentaje entre 0 y 100.</value>
</data>
<data name="Number_PowerOfTwo" xml:space="preserve">
  <value>El número debe ser una potencia de dos.</value>
</data>
<data name="Number_Prime" xml:space="preserve">
  <value>El número debe ser primo.</value>
</data>
<data name="Pagination_PageNumber" xml:space="preserve">
  <value>El número de página debe ser ≥ 1.</value>
</data>
<data name="Pagination_PageSize" xml:space="preserve">
  <value>El tamaño de página debe estar entre 1 y 100.</value>
</data>
<data name="Password_NumberRequired" xml:space="preserve">
  <value>La contraseña debe contener al menos un número.</value>
</data>
<data name="Password_SymbolRequired" xml:space="preserve">
  <value>La contraseña debe contener al menos un símbolo.</value>
</data>
<data name="Password_UppercaseRequired" xml:space="preserve">
  <value>La contraseña debe contener al menos una letra mayúscula.</value>
</data>
<data name="Password_Weak" xml:space="preserve">
  <value>La contraseña debe incluir letras mayúsculas/minúsculas, números, caracteres especiales y tener al menos {minLength} caracteres.</value>
</data>
<data name="Phone_Invalid" xml:space="preserve">
  <value>El formato del número de teléfono no es válido.</value>
</data>
<data name="Phone_TurkishMobile" xml:space="preserve">
  <value>Debe ser un número de móvil turco válido.</value>
</data>
<data name="PostalCode_Invalid" xml:space="preserve">
  <value>El formato del código postal no es válido.</value>
</data>
<data name="Regex_Invalid" xml:space="preserve">
  <value>El valor no coincide con el formato requerido.</value>
</data>
<data name="Security_Encrypted" xml:space="preserve">
  <value>La entrada debe estar en un formato cifrado válido.</value>
</data>
<data name="Security_InvalidFileName" xml:space="preserve">
  <value>El nombre del archivo no debe contener caracteres no válidos.</value>
</data>
<data name="Security_NoHtml" xml:space="preserve">
  <value>El texto no debe contener etiquetas HTML.</value>
</data>
<data name="Security_NoUnicodeSymbols" xml:space="preserve">
  <value>El texto no debe contener símbolos Unicode especiales ni emojis.</value>
</data>
<data name="Security_PasswordComplexity" xml:space="preserve">
  <value>La contraseña debe tener al menos {0} caracteres e incluir una letra, un número y un símbolo.</value>
</data>
<data name="Security_SqlInjectionSafe" xml:space="preserve">
  <value>La entrada debe ser segura contra inyecciones SQL.</value>
</data>
<data name="Security_XssSafe" xml:space="preserve">
  <value>La entrada no debe contener contenido XSS potencial.</value>
</data>
<data name="Slug_Invalid" xml:space="preserve">
  <value>El valor debe ser un slug válido (solo letras minúsculas, números y guiones).</value>
</data>
<data name="String_AlphaNumericOnly" xml:space="preserve">
  <value>Solo se permiten letras y números.</value>
</data>
<data name="String_CamelCase" xml:space="preserve">
  <value>El texto debe estar en formato camelCase (p. ej., ejemploTexto).</value>
</data>
<data name="String_CountryCode" xml:space="preserve">
  <value>Debe ser un código de país válido (ISO 3166-1 alpha-2).</value>
</data>
<data name="String_CurrencyCode" xml:space="preserve">
  <value>Debe ser un código de moneda válido (ISO 4217).</value>
</data>
<data name="String_EndsWith" xml:space="preserve">
  <value>El valor debe terminar con el sufijo requerido.</value>
</data>
<data name="String_HexColor" xml:space="preserve">
  <value>Debe ser un código de color hexadecimal válido (p. ej., #FFF o #FFFFFF).</value>
</data>
<data name="String_Hostname" xml:space="preserve">
  <value>Debe ser un nombre de host válido.</value>
</data>
<data name="String_JwtToken" xml:space="preserve">
  <value>Debe ser un token JWT válido.</value>
</data>
<data name="String_KebabCase" xml:space="preserve">
  <value>El texto debe estar en formato kebab-case (p. ej., ejemplo-texto).</value>
</data>
<data name="String_LanguageCode" xml:space="preserve">
  <value>Debe ser un código de idioma válido (ISO 639-1).</value>
</data>
<data name="String_Lowercase" xml:space="preserve">
  <value>El texto debe estar completamente en minúsculas.</value>
</data>
<data name="String_MacAddress" xml:space="preserve">
  <value>Debe ser una dirección MAC válida.</value>
</data>
<data name="String_MimeType" xml:space="preserve">
  <value>Debe ser un tipo MIME válido (p. ej., image/png).</value>
</data>
<data name="String_NoSpecialCharacters" xml:space="preserve">
  <value>No debe contener caracteres especiales.</value>
</data>
<data name="String_NoWhitespace" xml:space="preserve">
  <value>El valor no debe contener espacios en blanco.</value>
</data>
<data name="String_OnlyLetters" xml:space="preserve">
  <value>Este campo solo debe contener letras.</value>
</data>
<data name="String_OnlyLetters_Optional" xml:space="preserve">
  <value>Si no está vacío, debe contener solo letras y espacios.</value>
</data>
<data name="String_PascalCase" xml:space="preserve">
  <value>El texto debe estar en formato PascalCase (p. ej., EjemploTexto).</value>
</data>
<data name="String_SpecialCharRequired" xml:space="preserve">
  <value>El valor debe contener al menos un carácter especial.</value>
</data>
<data name="String_StartsWith" xml:space="preserve">
  <value>El valor debe comenzar con el prefijo requerido.</value>
</data>
<data name="String_StartsWithUppercase" xml:space="preserve">
  <value>Este campo debe comenzar con una letra mayúscula.</value>
</data>
<data name="String_TrimmedEmpty" xml:space="preserve">
  <value>Este campo no puede estar vacío ni contener solo espacios.</value>
</data>
<data name="String_Uppercase" xml:space="preserve">
  <value>El texto debe estar completamente en mayúsculas.</value>
</data>
<data name="String_Version" xml:space="preserve">
  <value>Debe tener un formato de versión válido (p. ej., 1.0.0).</value>
</data>
<data name="Time_Range" xml:space="preserve">
  <value>La hora debe estar entre {0} y {1}.</value>
</data>
<data name="Url_Instagram" xml:space="preserve">
  <value>Debe ser una URL de Instagram válida.</value>
</data>
<data name="Url_Invalid" xml:space="preserve">
  <value>El formato de la URL no es válido. Solo se permiten URLs HTTP y HTTPS.</value>
</data>
<data name="Url_YouTube" xml:space="preserve">
  <value>Debe ser una URL de YouTube válida.</value>
</data>
<data name="Xml_Invalid" xml:space="preserve">
  <value>El valor no es una cadena XML válida.</value>
</data>

</root>